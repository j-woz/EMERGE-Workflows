
# Generated by stc version 1.0.5
# date                    : 2025/05/16 18:16:42
# Turbine version         : 1.4.2
# Input filename          : /global/u1/w/wozniak/proj/EMERGE-Workflows/copies.swift
# Output filename         : /global/u1/w/wozniak/proj/EMERGE-Workflows/./swift-t-copies.oWr.tic
# STC home                : /global/cfs/cdirs/m3623/wozniak/sfw/swift-t_2025-05-16/stc
# Turbine home            : /global/cfs/cdirs/m3623/wozniak/sfw/swift-t_2025-05-16/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : copies.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : ./swift-t-copies.oWr.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /global/cfs/cdirs/m3623/wozniak/sfw/swift-t_2025-05-16/stc
# stc.turbine.version           : 1.4.2
# stc.turbine_home              : /global/cfs/cdirs/m3623/wozniak/sfw/swift-t_2025-05-16/turbine
# stc.version                   : 1.0.5

# Metadata:

package require turbine 1.4.2
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
}


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string t:18 EXPR_TEMPORARY copies.swift:18:28
    # Var: $float v:t:6 VALUE_OF [float:__t:6]
    # Var: $float v:t:5 VALUE_OF [float:__t:5]
    # Var: $int v:seed VALUE_OF [int:seed]
    # Var: $string v:seed_dir VALUE_OF [string:seed_dir]
    # Var: $string v:work_dir VALUE_OF [string:work_dir]
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:t:16 VALUE_OF [string:__t:16]
    # Var: $string v:t:18 VALUE_OF [string:__t:18]
    # Var: *rw(file)[int] u:plts copies.swift:18:0
    lassign [ adlb::multicreate [ list string 1 1 1 ] [ list container integer file_ref 1 1 2 ] ] t:18 u:plts
    turbine::c::log "allocated t:18=<${t:18}> u:plts=<${u:plts}>"
    set v:t:6 [ expr {rand()} ]
    set v:t:5 [ expr { ${v:t:6} * 100.0 } ]
    set v:seed [ expr { int(floor(${v:t:5})) } ]
    set v:seed_dir [ turbine::sprintf_impl "%s/seed%i" "/global/cfs/cdirs/m3623/wozniak/1k_bay" ${v:seed} ]
    set v:work_dir [ turbine::sprintf_impl "%s/seed%i" "/tmp/wozniak" ${v:seed} ]
    set v:t:13 "seed_dir: ${v:seed_dir}"
    set v:t:16 "work_dir: ${v:work_dir}"
    set v:t:18 "${v:seed_dir}/plt*.h5"
    turbine::store_string ${t:18} ${v:t:18}
    turbine::glob [ list ${u:plts} ] [ list ${t:18} ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "__entry-call_foreign-printf ${v:seed}"
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-call_foreign-printf-1 ${v:t:13} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-call_foreign-printf-2 ${v:t:16} ]
    turbine::reset_priority
    turbine::rule [ list ${u:plts} ] [ list __entry-optmerged ${v:work_dir} ${u:plts} ]
}


proc __entry-call_foreign-printf { v:seed } {
    # Var: $void v:t:8 VALUE_OF [void:__t:8]
    set v:t:8 [ turbine::printf_local "seed: %i" ${v:seed} ]
}


proc __entry-call_foreign-printf-1 { v:t:13 } {
    # Var: $void v:t:12 VALUE_OF [void:__t:12]
    set v:t:12 [ turbine::printf_local ${v:t:13} ]
}


proc __entry-call_foreign-printf-2 { v:t:16 } {
    # Var: $void v:t:15 VALUE_OF [void:__t:15]
    set v:t:15 [ turbine::printf_local ${v:t:16} ]
}


proc __entry-optmerged { v:work_dir u:plts } {
    # Var: file$[int] v:plts VALUE_OF [*rw(file)[int]:plts]
    # Var: $int v:t:22 VALUE_OF [int:__t:22]
    # Var: $void v:t:20 VALUE_OF [void:__t:20]
    set v:plts [ adlb::enumerate ${u:plts} dict all 0 0 ]
    set v:t:22 [ dict size ${v:plts} ]
    set v:t:20 [ turbine::printf_local "plts: %i" ${v:t:22} ]
    dict for {tcltmp:ignore u:plt} ${v:plts} {
        # Var: file u:dest copies.swift:__entry():24:21
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 3 ] ] [ list 1 ] ] u:dest
        turbine::file_read_refcount_incr ${u:plt} 1
        turbine::rule [ list [ turbine::get_file_td ${u:plt} ] ] [ list basename-argwait ${v:work_dir} ${u:dest} ${u:plt} ]
    }
    turbine::read_refcount_decr ${u:plts} 1
}


proc basename-argwait { v:work_dir u:dest u:plt } {
    # Var: $file v:p RENAMED [$file:__v:p]
    # Var: $string v:f RENAMED [$string:__v:f]
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    set v:p [ turbine::retrieve_file ${u:plt} ]
    set l:t [ lindex ${v:p} 0 ] ; set v:f [ file tail ${l:t} ]
    set v:t:23 "${v:work_dir}/${v:f}"
    turbine::set_filename_val ${u:dest} ${v:t:23}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry:wait:plt ${v:t:23} ${u:dest} ${u:plt} ]
    turbine::reset_priority
}


proc __entry:wait:plt { v:t:23 u:dest u:plt } {
    # Var: $file v:plt VALUE_OF [file:plt]
    # Var: $file v:dest VALUE_OF [file:dest]
    set v:plt [ turbine::retrieve_file ${u:plt} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:dest [ turbine::create_local_file_ref ${v:t:23} ${tcltmp:init_rc} 1 ]
    turbine::copy_local_file_contents ${v:dest} ${v:plt}
    turbine::store_file ${u:dest} v:dest 0
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__t:18" "copies:18:28"
adlb::add_debug_symbol 2 "plts" "copies:18:0"
adlb::add_debug_symbol 3 "dest" "copies:__entry():24:21"
turbine::start swift:main swift:constants
turbine::finalize
